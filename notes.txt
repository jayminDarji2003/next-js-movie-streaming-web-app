api key : 40ef6edee58a8d45f729262b862d0826
api read access token : eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MGVmNmVkZWU1OGE4ZDQ1ZjcyOTI2MmI4NjJkMDgyNiIsIm5iZiI6MTcyNzE4MjUxMC4xNTg4NDIsInN1YiI6IjY2ZjJiNGIxYzIzNzI1OGU0YzI2ZjE3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tAdwtXU_CQNI-Kp3o6wdgJasuxyYO3jVWNKiVu9fApE



-> movie slider
const options = {
  method: 'GET',
  headers: {
    accept: 'application/json',
    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MGVmNmVkZWU1OGE4ZDQ1ZjcyOTI2MmI4NjJkMDgyNiIsIm5iZiI6MTcyNzE4MjUxMC4xNTg4NDIsInN1YiI6IjY2ZjJiNGIxYzIzNzI1OGU0YzI2ZjE3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tAdwtXU_CQNI-Kp3o6wdgJasuxyYO3jVWNKiVu9fApE'
  }
};

fetch('https://api.themoviedb.org/3/movie/top_rated?language=en-US&page=1', options)
  .then(response => response.json())
  .then(response => console.log(response))
  .catch(err => console.error(err));


-> featured movies
const options = {
  method: 'GET',
  headers: {
    accept: 'application/json',
    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MGVmNmVkZWU1OGE4ZDQ1ZjcyOTI2MmI4NjJkMDgyNiIsIm5iZiI6MTcyNzE4MjUxMC4xNTg4NDIsInN1YiI6IjY2ZjJiNGIxYzIzNzI1OGU0YzI2ZjE3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tAdwtXU_CQNI-Kp3o6wdgJasuxyYO3jVWNKiVu9fApE'
  }
};

fetch('https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1', options)
  .then(response => response.json())
  .then(response => console.log(response))


-> featured casts 

const options = {
  method: 'GET',
  headers: {
    accept: 'application/json',
    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MGVmNmVkZWU1OGE4ZDQ1ZjcyOTI2MmI4NjJkMDgyNiIsIm5iZiI6MTcyNzE4MjUxMC4xNTg4NDIsInN1YiI6IjY2ZjJiNGIxYzIzNzI1OGU0YzI2ZjE3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tAdwtXU_CQNI-Kp3o6wdgJasuxyYO3jVWNKiVu9fApE'
  }
};

fetch('https://api.themoviedb.org/3/person/popular?language=en-US&page=1', options)
  .then(response => response.json())
  .then(response => console.log(response))
  .catch(err => console.error(err));









-> slider

"use client";

import React, { useState, useEffect, useRef } from "react";

// Sample data for the carousel
const items = [
  {
    imageId: "/man.jpeg", // Replace with your actual image paths
    text: "Pizza",
  },
  {
    imageId: "/man.jpeg",
    text: "Burger",
  },
  {
    imageId: "/man.jpeg",
    text: "Sushi",
  },
  {
    imageId: "/man.jpeg",
    text: "Pasta",
  },
  {
    imageId: "/man.jpeg",
    text: "Salad",
  },
  {
    imageId: "/man.jpeg",
    text: "Sushi",
  },
  {
    imageId: "/man.jpeg",
    text: "Pasta",
  },
  {
    imageId: "/man.jpeg",
    text: "Salad",
  },
  {
    imageId: "/man.jpeg",
    text: "Sushi",
  },
  {
    imageId: "/man.jpeg",
    text: "Pasta",
  },
  {
    imageId: "/man.jpeg",
    text: "Salad",
  },
  // You can add more items if needed
];

const CastSlider = () => {
  const [scrollPosition, setScrollPosition] = useState(0);
  const carouselRef = useRef(null);
  const itemWidth = 300; // Width of each item, adjust as needed

  const handlePrevClick = () => {
    setScrollPosition((prevPosition) => Math.max(prevPosition - itemWidth, 0)); // Prevent going out of bounds
  };

  const handleNextClick = () => {
    setScrollPosition((prevPosition) => prevPosition + itemWidth); // Adjust to your needs
  };

  useEffect(() => {
    if (carouselRef.current) {
      carouselRef.current.scrollTo({
        left: scrollPosition,
        behavior: "smooth",
      });
    }
  }, [scrollPosition]);

  return (
    <div className="container p-10 overflow-hidden relative ">
      <div className="flex  justify-between">
        <p className="text-2xl pl-10 font-bold">Featured Casts</p>

        <div className="flex items-center gap-1 text-red-500 text-sm font-bold pr-10 hover:cursor-pointer">
          <p className="">See more</p>
          <i className="fa-solid fa-chevron-right"></i>
        </div>
      </div>

      <div className="flex items-center justify-between">
        {/* Left arrow button */}
        <button onClick={handlePrevClick} className="text-3xl mr-5">
          <i className="fa-solid fa-chevron-left"></i>
        </button>

        {/* Carousel */}
        <div
          ref={carouselRef}
          className="flex items-center gap-16 overflow-x-hidden overflow-y-hidden p-4 relative flex-grow"
          style={{ scrollSnapType: "x mandatory" }}
        >
          {/* Food cards will go here */}
          {items.map((item, index) => (
            <div key={index} className="flex-shrink-0 w-60 ">
              <img
                src={item.imageId}
                alt={item.text}
                className="object-cover w-[100%] h-80"
              />
              <p className="text-sm font-bold mt-1">{item.text}</p>
            </div>
          ))}
        </div>

        {/* Right arrow button */}
        <button onClick={handleNextClick} className="text-3xl ml-5">
          <i className="fa-solid fa-chevron-right"></i>
        </button>
      </div>
    </div>
  );
};

export default CastSlider;










-> slider

"use client";

import React, { useState, useEffect, useRef } from "react";
const Carousel = () => {
  const [scrollPosition, setScrollPosition] = useState(0);
  const carouselRef = useRef(null);

  const handlePrevClick = () => {
    setScrollPosition((prevPosition) => prevPosition - 300);
  };

  const handleNextClick = () => {
    setScrollPosition((prevPosition) => prevPosition + 300);
  };

  useEffect(() => {
    if (carouselRef.current) {
      carouselRef.current.scrollTo({
        left: scrollPosition,
        behavior: "smooth",
      });
    }
  }, [scrollPosition]);

  return (
    <>
      <div className="container mx-auto overflow-hidden relative">
        <h1 className="pt-11 text-xl font-bold lg:p-10 lg:text-2xl">
          What's on your mind?
        </h1>
        <div
          ref={carouselRef}
          className="flex items-center space-x-4 overflow-x-hidden overflow-y-hidden p-4"
          style={{ scrollSnapType: "x mandatory" }}
        >
          {/* Food cards will go here */}
          {Items.map((item, index) => (
            <div
              key={index}
              className="flex-shrink-0 w-40 h-40 rounded-lg overflow-hidden"
            >
              <img
                src={RESTAURANT_FOOD_URL + item.imageId}
                alt={item.text}
                className=" h-full object-cover rounded-lg "
              />
            </div>
          ))}
        </div>
        <button
          onClick={handlePrevClick}
          className="prev-arrow absolute top-5 mr-2 right-0 transform translate-y-1/2 -translate-x-full bg-gray-300 text-white px-4 py-2 rounded-full"
        >
          <i className="fa-solid fa-arrow-left"></i>
        </button>
        <button
          onClick={handleNextClick}
          className="next-arrow absolute top-5 right-0 transform translate-y-1/2 bg-gray-300 text-white px-4 py-2 rounded-full"
        >
          <i className="fa-solid fa-arrow-right"></i>
        </button>
      </div>
    </>
  );
};

export default Carousel;
